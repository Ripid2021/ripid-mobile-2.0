name: IOS Staging Build

on:
  workflow_dispatch:
  release:
    types: [published] # only run the workflow when a new release has been published
  push:
    branches: ["staging"]

jobs:
  ios-build:
    name: IOS Staging Build
    runs-on: "macos-latest"
    defaults:
      run:
        working-directory: ios

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore node_modules from cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile --network-timeout 300000

      - name: Restore Pods cache
        uses: actions/cache@v2
        with:
          path: |
            ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: Install Pods
        run: bundle install && bundle exec pod install --repo-update && cd ..

      - name: Build and deploy
        run: fastlane ios_staging
        env: 
          ISSUER_ID: ${{ secrets.APPSTORE_STAGING_ISSUER_ID }}
          KEY_ID: ${{ secrets.APPSTORE_STAGING_API_KEY_ID }}
          APPSTORE_CONNECT_PRIVATE_KEY: ${{ secrets.APPSTORE_STAGING_API_PRIVATE_KEY }}

          PROJECT_WORKSPACE: RipidStaging.xcworkspace
          SCHEME: RipidStaging
          CERTIFICATE_PASSWORD: ${{ secrets.IOS_STAGING_CERTIFICATE_PASSWORD }}
          TEAM_ID: ${{ secrets.IOS_STAGING_TEAM_ID }}
          OUTPUT_PATH: output.ipa
          EXPORT_METHOD: app-store
          CONFIGURATION: Release
          CODE_SIGNING_IDENTITY: 'iPhone Distribution'
          MOBILEPROVISION_BASE64: ${{ secrets.IOS_MOBILE_STAGING_PROVISION_BASE64 }}
          P12_BASE64: ${{ secrets.IOS_STAGING_P12_BASE64 }}
